{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/securityRoute.js","App.js","serviceWorker.js","index.js"],"names":["CreateProjectButton","react_default","a","createElement","Fragment","react_router_dom","to","className","createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","projectIdentifier","projectName","description","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","onSubmit","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updatedProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityClass","priorityString","project_task_prop","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","projectTask","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","forEach","ele","status","ProjectBoard","getBacklog","boardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updatedProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","loginRequest","login","LoginRequest","decode","setItem","jwt_decode","component","otherProps","objectWithoutProperties","react_router","assign","render","jwtToken","decode_jwtToken","currentTime","Date","now","exp","App","es","Layout_Header","exact","path","securityRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a07cd53c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\"); // if the project id doesn't exist, back to dashboard\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n// Types for Backlog Actions\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\n// const\n\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React, { Component } from \"react\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.projects;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  projects: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  projects: state.projects\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    // extract token from res.data\n    // store the token in the localStorage\n    // set out token in header ***\n    // decode token on React\n    // dispatch to our security\n\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    const { token } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    setJWTToken(token);\n    const decode = jwt_decode(token);\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decode\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n          <div className=\"container\">\n            <Link className=\"navbar-brand\" to=\"/\">\n              Personal Project Management Tool\n            </Link>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#mobile-nav\"\n            >\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            {user && validToken ? userIsAuthenticated : userIsNotAuthenticated}\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProp,\n  {\n    logout\n  }\n)(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit.bind(this)}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange.bind(this)}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) return true;\n  else return false;\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload,\n        validToken: booleanActionPayload(action.payload)\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  projects: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\n\nconst initialState = {};\nconst middleware = [thunk];\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updatedProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updatedProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.projects.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task_prop } = this.props;\n\n    let priorityClass, priorityString;\n\n    if (project_task_prop.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task_prop.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task_prop.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task_prop.projectSequence} - Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task_prop.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task_prop.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task_prop.projectIdentifier}/${\n              project_task_prop.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task_prop.projectIdentifier,\n              project_task_prop.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\n// const mapStateToProps = {};\n\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n    const tasks = project_tasks_prop.map(projectTask => (\n      <ProjectTask key={projectTask.id} project_task_prop={projectTask} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    tasks.forEach(ele => {\n      let status = ele.props.project_task_prop.status;\n      if (status === \"TO_DO\") todoItems.push(ele);\n      if (status === \"IN_PROGRESS\") inProgressItems.push(ele);\n      if (status === \"DONE\") doneItems.push(ele);\n    });\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let boardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board.\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    boardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {boardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport { Link } from \"react-router-dom\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) this.setState({ errors: nextProps.errors });\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updatedProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updatedProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} + Project Task ID:{\" \"}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  project_task: PropTypes.object.isRequired,\n  getProjectTask: PropTypes.func.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) this.props.history.push(\"/dashboard\");\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2 \" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2 \" to=\"/login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { createNewUser } from \"../../actions/securityActions\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) this.props.history.push(\"/dashboard\");\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) this.setState({ errors: nextProps.errors });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address(username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) this.props.history.push(\"/dashboard\");\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) this.setState({ errors: nextProps.errors });\n\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const loginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    this.props.login(loginRequest);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Username\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    login\n  }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecurityRoute from \"./securityUtils/securityRoute\";\n\nconst jwtToken = localStorage.jwtToken;\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decode_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decode_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decode_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n\n            {\n              // Public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              // Private Routes\n            }\n            <Switch>\n              <SecurityRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecurityRoute exact path=\"/addProject\" component={AddProject} />\n              <SecurityRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecurityRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecurityRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecurityRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}